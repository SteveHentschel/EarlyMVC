@model IEnumerable<MyMusicStore.Models.Album>

@helper Truncate(string input, int length)
{
    if (input.Length <= length)
    {
        @input
    }
    else
    {
        @input.Substring(0, length)<text>...</text>
    }
}

@{
    ViewBag.Title = "Store Manager - All Albums";
}

<h2>All Albums</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table>
    <tr>
        <th></th>
        <th>Genre</th>
        <th>Artist</th>
        <th>Title</th>
        <th>Price</th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.AlbumId }) |

                @Html.ActionLink("Delete", "Delete", new { id = item.AlbumId })
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre.Name)
            </td>
            <td>
                @Truncate(item.Artist.Name, 25)
            </td>
            <td>
                @Truncate(item.Title, 25)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
        </tr>
    }
</table>

